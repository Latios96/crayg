name: Github Actions CI

on: [push]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "windows-2019", "ubuntu-20.04", "macos-latest" ]
    name: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.7
        with:
          cmake-version: '3.18.x'
      - name: install conan
        run: |
          pip install conan
          conan --version
      - name: add remotes
        run: |
          conan remote list
          python scripts/add_conan_remotes.py
          conan remote list
      - name: conan login
        run: conan user ci_github_actions -p -r=framebffr
        env:
          CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
      - name: setup conan profile
        if: runner.os != 'Linux'
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
      - name: prepare build
        run: mkdir build
      - name: run CMake
        working-directory: build
        run: cmake .. -DCMAKE_BUILD_TYPE=Release
      - name: upload dependencies
        run: conan upload "*" --all --confirm -r=framebffr --parallel
      - name: build
        working-directory: build
        if: runner.os != 'Windows'
        run: make -j 4
      - name: build
        if: runner.os == 'Windows'
        working-directory: build
        run: cmake --build . --config Release -- /M:%NUMBER_OF_PROCESSORS%
        shell: cmd
      - name: run tests
        working-directory: build
        run: ctest -C Release -V
      - name: create package
        working-directory: build
        run: cmake --build . --config Release --target createDistribution